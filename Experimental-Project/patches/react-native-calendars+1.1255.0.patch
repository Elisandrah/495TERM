diff --git a/node_modules/react-native-calendars/src/agenda/index.js b/node_modules/react-native-calendars/src/agenda/index.js
index 6ddafa8..098c49c 100644
--- a/node_modules/react-native-calendars/src/agenda/index.js
+++ b/node_modules/react-native-calendars/src/agenda/index.js
@@ -154,11 +154,19 @@ export default class AgendaView extends Component {
     }
   }
 
-  chooseDayFromCalendar = d => {
+  chooseDayFromCalendar = (d) => {
     this.chooseDay(d, !this.state.calendarScrollable);
   };
 
+  // CHANGE: Made day unselectable if agenda list is open.
+  // User will have to press knob or slide down.
+
   chooseDay(d, optimisticScroll) {
+    //console.log(this.state);
+    if (!this.state.calendarScrollable) {
+      return;
+    }
+
     const day = parseDate(d);
 
     this.setState({
diff --git a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
index 3924aae..12e767d 100644
--- a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
+++ b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
@@ -228,6 +228,7 @@ class ReservationList extends Component {
       return <ActivityIndicator style={this.style.indicator} color={theme && theme.indicatorColor} />;
     }
 
+    // CHANGE: Made agenda list unscrollable. onScroll set to empty function.
     return (
       <FlatList
         ref={c => (this.list = c)}
@@ -239,7 +240,7 @@ class ReservationList extends Component {
         showsVerticalScrollIndicator={false}
         scrollEventThrottle={200}
         onMoveShouldSetResponderCapture={this.onMoveShouldSetResponderCapture}
-        onScroll={this.onScroll}
+        onScroll={() => {}}
         refreshControl={this.props.refreshControl}
         refreshing={this.props.refreshing}
         onRefresh={this.props.onRefresh}
